{"version":3,"sources":["../../src/pages/order-confirmation/order-confirmation.module.ts","../../src/services/domain/pedido.service.ts","../../src/pages/order-confirmation/order-confirmation.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { OrderConfirmationPage } from './order-confirmation';\nimport { PedidoService } from '../../services/domain/pedido.service';\n\n@NgModule({\n  declarations: [\n    OrderConfirmationPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(OrderConfirmationPage),\n  ],\n  providers:[\n    PedidoService\n  ]\n})\nexport class OrderConfirmationPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirmation/order-confirmation.module.ts","import {Injectable} from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { API_CONFIG } from \"../../config/api.config\";\r\n\r\nimport { PedidoDTO } from \"../../models/pedido.dto\";\r\n\r\n@Injectable()\r\nexport class PedidoService{\r\n    constructor(public http:HttpClient){\r\n    }\r\n    insert(obj: PedidoDTO){\r\n        return this.http.post(`${API_CONFIG.baseUrl}/pedidos`,obj,\r\n        {\r\n            observe: \"response\",\r\n            responseType:\"text\"\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/domain/pedido.service.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { PedidoDTO } from '../../models/pedido.dto';\nimport { CartItem } from '../../models/cart-item';\nimport { ClienteDTO } from '../../models/cliente.dto';\nimport { EnderecoDTO } from '../../models/endereco.dto';\nimport { CartService } from '../../services/domain/cart.service';\nimport { ClienteService } from '../../services/domain/cliente.service';\nimport { PedidoService } from '../../services/domain/pedido.service';\n\n/**\n * Generated class for the OrderConfirmationPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-order-confirmation',\n  templateUrl: 'order-confirmation.html',\n})\nexport class OrderConfirmationPage {\n  pedido:PedidoDTO;\n  cartItems: CartItem[];\n  cliente: ClienteDTO;\n  endereco: EnderecoDTO;\n  codpedido: string;\n\n  constructor(public navCtrl: NavController,\n     public navParams: NavParams,\n     public cartService: CartService,\n     public clienteService: ClienteService,\n     public pedidoService: PedidoService) {\n\n      this.pedido =this.navParams.get(\"pedido\");\n  }\n\n  ionViewDidLoad() {\n    this.cartItems = this.cartService.getCart().items;\n\n    this.clienteService.findById(this.pedido.cliente.id)\n      .subscribe(response => {\n        this.cliente = response as ClienteDTO;\n        this.endereco = this.findEndereco(this.pedido.enderecoDeEntrega.id, response[\"enderecos\"]);\n        \n      },\n      error => this.navCtrl.setRoot(\"HomePage\"));\n  }\n  private findEndereco(id: string,list: EnderecoDTO[]): EnderecoDTO{\n    let position = list.findIndex(x => x.id == id);\n    return list[position];\n  }\n  total(){\n    return this.cartService.total();\n  }\n  home(){\n    this.navCtrl.setRoot(\"CategoriasPage\")\n  }\n  back(){\n    this.navCtrl.setRoot(\"CartPage\");\n  }\n  checkout(){\n    this.pedidoService.insert(this.pedido)\n      .subscribe(response => {\n        this.cartService.createOrClearCart();\n        this.codpedido = this.extractId(response.headers.get(\"location\"));\n      },\n      error => {\n        if(error.status = 403){\n          this.navCtrl.setRoot(\"HomePage\");\n        }\n      })\n  }\n\n  private extractId(location : string) : string{\n    let position = location.lastIndexOf(\"/\");\n    return location.substring(position +1, location.length);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/order-confirmation/order-confirmation.ts"],"sourceRoot":""}